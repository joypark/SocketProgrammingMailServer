from socket import *
import base64
import ssl
msg = '\r\n YOO'
endmsg = '\r\n.\r\n'
# Choose a mail server (e.g. Google mail server) and call it mailserver
mailserver = 'smtp.gmail.com' #Fill in start
mailport = 465
#Fill in end
# Create socket called clientSocket and establish a TCP connection with mailserver

#Fill in start
clientSocket = socket(AF_INET, SOCK_STREAM)
clientSocket = ssl.wrap_socket(clientSocket)
clientSocket.connect((mailserver, mailport))
recv = clientSocket.recv(1024)
print recv
if recv[:3] != '220':
	print '220 reply not received from server.'
#Fill in end

# Send HELO command and print server response.
heloCommand = 'HELO Chai\r\n'
clientSocket.send(heloCommand)
recv = clientSocket.recv(1024)
print recv
if recv[:3] != '250':
    print '250 reply not received from server.'

# Send MAIL FROM command and print server response.
# Fill in start
# Socket Authentication
clientSocket.send("AUTH LOGIN\r\n")
recv = clientSocket.recv(1024)
print recv
clientSocket.send(base64.b64encode("joypark202@gmail.com")+'\r\n') #enter username email address
recv = clientSocket.recv(1024)
print recv
clientSocket.send(base64.b64encode("password")+'\r\n') #enter application specific password
'''This password is generated by the specific mail server, and it should be hashed like any other password that can be entered here'''
#to create sign in to google and type application specific password and click to sign in to google and create a application specific password.
recv = clientSocket.recv(1024)
print recv
# After checking authentication
mailfromCommand = 'MAIL FROM: <joypark202@mail.com>\r\n'
clientSocket.send(mailfromCommand)
recv=clientSocket.recv(1024)
print(recv)
if recv[:3] != '250':
	print ('mail from 250 reply not received from server.')
#Fill in end

# Send RCPT TO command and print server response.
# Fill in start
rcptToCommand = 'RCPT TO: <joypark202@gmail.com> \r\n'
clientSocket.send(rcptToCommand)
recv = clientSocket.recv(1024)
print(recv)
if recv [:3] != '250':
	print('rcpt to 250 reply not recieved from server')
# Fill in end

# Send DATA command and print server response.
# Fill in start
clientSocket.send('DATA\r\n')
recv = clientSocket.recv(1024)
print(recv)

# Fill in end

# Send message data.
# Fill in start
message  = raw_input('Enter Message Here: ')#enter any message you want and it will be send to the email address.
# Fill in end
# Message ends with a single period.
mailMessageEnd = '\r\n.\r\n'

# Fill in start
clientSocket.send(message + mailMessageEnd)
recv = clientSocket.recv(1024)
print(recv)

# Fill in end

# Send QUIT command and get server response.
# Fill in start
quitCommand = 'Quit\r\n'
print (quitCommand)
clientSocket.send(1024)
recv = clientSocket.recv(1024)
print(recv)


# Fill in end
